<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified">
    <xs:element name="html">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="head"/>
                <xs:element ref="body"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="head">
        <xs:complexType>
            <xs:choice>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="meta"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <xs:element name="meta">
        <xs:complexType>
            <xs:attribute name="charset"/>
            <xs:attribute name="name"/>
            <xs:attribute name="content" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="body">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="AllComponentsGroup"/>
        </xs:complexType>
    </xs:element>
    <xs:simpleType name="Text">
        <xs:annotation>
            <xs:documentation>
                used for titles etc.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType name="StyleSheet">
        <xs:annotation>
            <xs:documentation>
                style sheet data
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType name="LanguageCode">
        <xs:annotation>
            <xs:documentation>
                a language code, as per [RFC3066]
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType name="Script">
        <xs:annotation>
            <xs:documentation>
                script expression
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType name="ContentType">
        <xs:annotation>
            <xs:documentation>
                media type, as per [RFC2045]
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType name="URI">
        <xs:annotation>
            <xs:documentation>
                a Uniform Resource Identifier, see [RFC2396]
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:anyURI"/>
    </xs:simpleType>
    <xs:simpleType name="LinkTypes">
        <xs:annotation>
            <xs:documentation>
                space-separated list of link types
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:NMTOKENS"/>
    </xs:simpleType>
    <xs:simpleType name="Shape">
        <xs:restriction base="xs:token">
            <xs:enumeration value="rect"/>
            <xs:enumeration value="circle"/>
            <xs:enumeration value="poly"/>
            <xs:enumeration value="default"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Coords">
        <xs:annotation>
            <xs:documentation>
                comma separated list of lengths
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[-+]?(\d+|\d+(\.\d+)?%)(,\s*[-+]?(\d+|\d+(\.\d+)?%))*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Character">
        <xs:annotation>
            <xs:documentation>
                a single character, as per section 2.2 of [XML]
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:length fixed="true" value="1"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="MultiLength">
        <xs:annotation>
            <xs:documentation>
                pixel, percentage, or relative
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[-+]?(\d+|\d+(\.\d+)?%)|[1-9]?(\d+)?\*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="tabindexNumber">
        <xs:annotation>
            <xs:documentation>
                tabindex attribute specifies the position of the current element
                in the tabbing order for the current document. This value must be
                a number between 0 and 32767. User agents should ignore leading zeros. 
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="Number">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="32767"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Number">
        <xs:annotation>
            <xs:documentation>
                one or more digits
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:nonNegativeInteger">
            <xs:pattern value="[0-9]+"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Charsets">
        <xs:annotation>
            <xs:documentation>
                a space separated list of character encodings, as per [RFC2045]
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType name="InputType">
        <xs:restriction base="xs:token">
            <xs:enumeration value="text"/>
            <xs:enumeration value="password"/>
            <xs:enumeration value="checkbox"/>
            <xs:enumeration value="radio"/>
            <xs:enumeration value="submit"/>
            <xs:enumeration value="reset"/>
            <xs:enumeration value="file"/>
            <xs:enumeration value="hidden"/>
            <xs:enumeration value="image"/>
            <xs:enumeration value="button"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Charset">
        <xs:annotation>
            <xs:documentation>
                a character encoding, as per [RFC2045]
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType name="ContentTypes">
        <xs:annotation>
            <xs:documentation>
                comma-separated list of media types, as per [RFC2045]
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType name="Datetime">
        <xs:annotation>
            <xs:documentation>
                date and time information. ISO date format
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:dateTime"/>
    </xs:simpleType>
    <xs:simpleType name="Length">
        <xs:annotation>
            <xs:documentation>
                nn for pixels or nn% for percentage length
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[-+]?(\d+|\d+(\.\d+)?%)"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Pixels">
        <xs:annotation>
            <xs:documentation>
                integer representing length in pixels
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:nonNegativeInteger"/>
    </xs:simpleType>
    <xs:simpleType name="TFrame">
        <xs:annotation>
            <xs:documentation>
                The border attribute sets the thickness of the frame around the
                table. The default units are screen pixels.

                The frame attribute specifies which parts of the frame around
                the table should be rendered. The values are not the same as
                CALS to avoid a name clash with the valign attribute.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:enumeration value="void"/>
            <xs:enumeration value="above"/>
            <xs:enumeration value="below"/>
            <xs:enumeration value="hsides"/>
            <xs:enumeration value="lhs"/>
            <xs:enumeration value="rhs"/>
            <xs:enumeration value="vsides"/>
            <xs:enumeration value="box"/>
            <xs:enumeration value="border"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="TRules">
        <xs:annotation>
            <xs:documentation>
                The rules attribute defines which rules to draw between cells:

                If rules is absent then assume:
                "none" if border is absent or border="0" otherwise "all"
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:enumeration value="none"/>
            <xs:enumeration value="groups"/>
            <xs:enumeration value="rows"/>
            <xs:enumeration value="cols"/>
            <xs:enumeration value="all"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Scope">
        <xs:annotation>
            <xs:documentation>
                Scope is simpler than headers attribute for common tables
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:enumeration value="row"/>
            <xs:enumeration value="col"/>
            <xs:enumeration value="rowgroup"/>
            <xs:enumeration value="colgroup"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType mixed="true" name="a.content">
        <xs:annotation>
            <xs:documentation>
                a elements use "Inline" excluding a
            </xs:documentation>
        </xs:annotation>
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:group ref="special"/>
            <xs:group ref="fontstyle"/>
            <xs:group ref="phrase"/>
            <xs:group ref="inline.forms"/>
            <xs:group ref="misc.inline"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType mixed="true" name="Inline">
        <xs:annotation>
            <xs:documentation>
                "Inline" covers inline or "text-level" elements
            </xs:documentation>
        </xs:annotation>
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:group ref="inline"/>
            <xs:group ref="misc.inline"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType mixed="true" name="button.content">
        <xs:annotation>
            <xs:documentation>
                button uses "Flow" but excludes a, form and form controls
            </xs:documentation>
        </xs:annotation>
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element ref="p"/>
            <xs:group ref="heading"/>
            <xs:element ref="div"/>
            <xs:group ref="lists"/>
            <xs:group ref="blocktext"/>
            <xs:element ref="table"/>
            <xs:group ref="special"/>
            <xs:group ref="fontstyle"/>
            <xs:group ref="phrase"/>
            <xs:group ref="misc"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType mixed="true" name="Flow">
        <xs:annotation>
            <xs:documentation>
                "Flow" mixes block and inline and is used for list items etc.
            </xs:documentation>
        </xs:annotation>
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:group ref="block"/>
            <xs:element ref="form"/>
            <xs:group ref="inline"/>
            <xs:group ref="misc"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="form.content">
        <xs:annotation>
            <xs:documentation>
                form uses "Block" excluding form
            </xs:documentation>
        </xs:annotation>
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:group ref="block"/>
            <xs:group ref="misc"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType mixed="true" name="pre.content">
        <xs:annotation>
            <xs:documentation>
                pre uses "Inline" excluding big, small, sup or sup
            </xs:documentation>
        </xs:annotation>
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element ref="a"/>
            <xs:group ref="fontstyle"/>
            <xs:group ref="phrase"/>
            <xs:group ref="special.pre"/>
            <xs:group ref="misc.inline"/>
            <xs:group ref="inline.forms"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="Block">
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:group ref="block"/>
            <xs:element ref="form"/>
            <xs:group ref="misc"/>
        </xs:choice>
    </xs:complexType>
    <xs:attributeGroup name="attrs">
        <xs:attributeGroup ref="coreattrs"/>
        <xs:attributeGroup ref="i18n"/>
        <xs:attributeGroup ref="events"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="coreattrs">
        <xs:annotation>
            <xs:documentation>
                core attributes common to most elements
                id       document-wide unique id
                class    space separated list of classes
                style    associated style info
                title    advisory title/amplification
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="id" type="xs:ID"/>
        <xs:attribute name="class" type="xs:NMTOKENS"/>
        <xs:attribute name="style" type="StyleSheet"/>
        <xs:attribute name="title" type="Text"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="i18n">
        <xs:annotation>
            <xs:documentation>
                internationalization attributes
                lang        language code (backwards compatible)
                xml:lang    language code (as per XML 1.0 spec)
                dir         direction for weak/neutral text
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="lang" type="LanguageCode"/>
        <xs:attribute name="dir">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:enumeration value="ltr"/>
                    <xs:enumeration value="rtl"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>
    <xs:attributeGroup name="events">
        <xs:annotation>
            <xs:documentation>
                attributes for common UI events
                onclick     a pointer button was clicked
                ondblclick  a pointer button was double clicked
                onmousedown a pointer button was pressed down
                onmouseup   a pointer button was released
                onmousemove a pointer was moved onto the element
                onmouseout  a pointer was moved away from the element
                onkeypress  a key was pressed and released
                onkeydown   a key was pressed down
                onkeyup     a key was released
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="onclick" type="Script"/>
        <xs:attribute name="ondblclick" type="Script"/>
        <xs:attribute name="onmousedown" type="Script"/>
        <xs:attribute name="onmouseup" type="Script"/>
        <xs:attribute name="onmouseover" type="Script"/>
        <xs:attribute name="onmousemove" type="Script"/>
        <xs:attribute name="onmouseout" type="Script"/>
        <xs:attribute name="onkeypress" type="Script"/>
        <xs:attribute name="onkeydown" type="Script"/>
        <xs:attribute name="onkeyup" type="Script"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="focus">
        <xs:annotation>
            <xs:documentation>
                attributes for elements that can get the focus
                accesskey   accessibility key character
                tabindex    position in tabbing order
                onfocus     the element got the focus
                onblur      the element lost the focus
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="accesskey" type="Character"/>
        <xs:attribute name="tabindex" type="tabindexNumber"/>
        <xs:attribute name="onfocus" type="Script"/>
        <xs:attribute name="onblur" type="Script"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="cellhalign">
        <xs:annotation>
            <xs:documentation>
                horizontal alignment attributes for cell contents

                char        alignment char, e.g. char=':'
                charoff     offset for alignment char
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="align">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:enumeration value="left"/>
                    <xs:enumeration value="center"/>
                    <xs:enumeration value="right"/>
                    <xs:enumeration value="justify"/>
                    <xs:enumeration value="char"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="char" type="Character"/>
        <xs:attribute name="charoff" type="Length"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="cellvalign">
        <xs:annotation>
            <xs:documentation>
                vertical alignment attributes for cell contents
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="valign">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:enumeration value="top"/>
                    <xs:enumeration value="middle"/>
                    <xs:enumeration value="bottom"/>
                    <xs:enumeration value="baseline"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>
    <xs:group name="inline">
        <xs:choice>
            <xs:element ref="a"/>
            <xs:group ref="special"/>
            <xs:group ref="fontstyle"/>
            <xs:group ref="phrase"/>
            <xs:group ref="inline.forms"/>
        </xs:choice>
    </xs:group>
    <xs:group name="special.pre">
        <xs:choice>
            <xs:element ref="br"/>
            <xs:element ref="span"/>
            <xs:element ref="bdo"/>
            <xs:element ref="map"/>
        </xs:choice>
    </xs:group>
    <xs:group name="special">
        <xs:choice>
            <xs:group ref="special.pre"/>
        </xs:choice>
    </xs:group>
    <xs:group name="fontstyle">
        <xs:choice>
            <xs:element ref="tt"/>
            <xs:element ref="i"/>
            <xs:element ref="b"/>
            <xs:element ref="u"/>
            <xs:element ref="big"/>
            <xs:element ref="small"/>
        </xs:choice>
    </xs:group>
    <xs:group name="phrase">
        <xs:choice>
            <xs:element ref="em"/>
            <xs:element ref="strong"/>
            <xs:element ref="dfn"/>
            <xs:element ref="code"/>
            <xs:element ref="q"/>
            <xs:element ref="samp"/>
            <xs:element ref="kbd"/>
            <xs:element ref="var"/>
            <xs:element ref="cite"/>
            <xs:element ref="abbr"/>
            <xs:element ref="acronym"/>
            <xs:element ref="sub"/>
            <xs:element ref="sup"/>
        </xs:choice>
    </xs:group>
    <xs:group name="inline.forms">
        <xs:choice>
            <xs:element ref="input"/>
            <xs:element ref="select"/>
            <xs:element ref="textarea"/>
            <xs:element ref="label"/>
            <xs:element ref="button"/>
        </xs:choice>
    </xs:group>
    <xs:group name="misc.inline">
        <xs:choice>
            <xs:element ref="ins"/>
            <xs:element ref="del"/>
            <xs:element ref="script"/>
        </xs:choice>
    </xs:group>
    <xs:group name="heading">
        <xs:choice>
            <xs:element ref="h1"/>
            <xs:element ref="h2"/>
            <xs:element ref="h3"/>
            <xs:element ref="h4"/>
            <xs:element ref="h5"/>
            <xs:element ref="h6"/>
        </xs:choice>
    </xs:group>
    <xs:group name="lists">
        <xs:choice>
            <xs:element ref="ul"/>
            <xs:element ref="ol"/>
            <xs:element ref="dl"/>
        </xs:choice>
    </xs:group>
    <xs:group name="blocktext">
        <xs:choice>
            <xs:element ref="pre"/>
            <xs:element ref="hr"/>
            <xs:element ref="blockquote"/>
            <xs:element ref="address"/>
        </xs:choice>
    </xs:group>
    <xs:group name="misc">
        <xs:annotation>
            <xs:documentation>
                these can only occur at block level
            </xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element ref="noscript"/>
            <xs:group ref="misc.inline"/>
        </xs:choice>
    </xs:group>
    <xs:group name="block">
        <xs:choice>
            <xs:element ref="p"/>
            <xs:group ref="heading"/>
            <xs:element ref="div"/>
            <xs:group ref="lists"/>
            <xs:group ref="blocktext"/>
            <xs:element ref="fieldset"/>
            <xs:element ref="table"/>
        </xs:choice>
    </xs:group>
    <xs:group name="html-tags">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="p"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="h1"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="h2"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="h3"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="h4"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="h5"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="h6"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="ul"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="ol"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="dl"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="dt"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="dd"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="hr"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="pre"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="a"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="span"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="br"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="strong"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="code"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="i"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="b"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="u"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="big"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="small"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="img"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="table"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="thead"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="tfoot"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="tr"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="th"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="td"/>
        </xs:sequence>
    </xs:group>
    <xs:element name="a">
        <xs:annotation>
            <xs:documentation>
                content is "Inline" except that anchors shouldn't be nested
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="a.content">
                    <xs:attributeGroup ref="attrs"/>
                    <xs:attributeGroup ref="focus"/>
                    <xs:attribute name="charset" type="Charset"/>
                    <xs:attribute name="type" type="ContentType"/>
                    <xs:attribute name="name" type="xs:NMTOKEN"/>
                    <xs:attribute name="href" type="URI"/>
                    <xs:attribute name="hreflang" type="LanguageCode"/>
                    <xs:attribute name="rel" type="LinkTypes"/>
                    <xs:attribute name="rev" type="LinkTypes"/>
                    <xs:attribute default="rect" name="shape" type="Shape"/>
                    <xs:attribute name="coords" type="Coords"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="p">
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="tt">
        <xs:annotation>
            <xs:documentation>
                fixed pitch font
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="i">
        <xs:annotation>
            <xs:documentation>
                italic font
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="b">
        <xs:annotation>
            <xs:documentation>
                bold font
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="u">
        <xs:annotation>
            <xs:documentation>
                underline font
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="big">
        <xs:annotation>
            <xs:documentation>
                bigger font
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="small">
        <xs:annotation>
            <xs:documentation>
                smaller font
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="em">
        <xs:annotation>
            <xs:documentation>
                emphasis
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="strong">
        <xs:annotation>
            <xs:documentation>
                strong emphasis
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="dfn">
        <xs:annotation>
            <xs:documentation>
                definitional
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="code">
        <xs:annotation>
            <xs:documentation>
                program code
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="q">
        <xs:annotation>
            <xs:documentation>
                inlined quote
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                    <xs:attribute name="cite" type="URI"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="samp">
        <xs:annotation>
            <xs:documentation>
                sample
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="kbd">
        <xs:annotation>
            <xs:documentation>
                something user would type
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="var">
        <xs:annotation>
            <xs:documentation>
                variable
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="cite">
        <xs:annotation>
            <xs:documentation>
                citation
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="abbr">
        <xs:annotation>
            <xs:documentation>
                abbreviation
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="acronym">
        <xs:annotation>
            <xs:documentation>
                acronym
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="sub">
        <xs:annotation>
            <xs:documentation>
                subscript
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="sup">
        <xs:annotation>
            <xs:documentation>
                superscript
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="input">
        <xs:annotation>
            <xs:documentation>
                form control
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attributeGroup ref="attrs"/>
            <xs:attributeGroup ref="focus"/>
            <xs:attribute default="text" name="type" type="InputType"/>
            <xs:attribute name="name">
                <xs:annotation>
                    <xs:documentation>
                        the name attribute is required for all but submit reset
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value"/>
            <xs:attribute name="checked">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="checked"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="disabled">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="disabled"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="readonly">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="readonly"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="size"/>
            <xs:attribute name="maxlength" type="Number"/>
            <xs:attribute name="src" type="URI"/>
            <xs:attribute name="alt"/>
            <xs:attribute name="usemap" type="URI"/>
            <xs:attribute name="onselect" type="Script"/>
            <xs:attribute name="onchange" type="Script"/>
            <xs:attribute name="accept" type="ContentTypes"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="select">
        <xs:annotation>
            <xs:documentation>
                option selector
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:element ref="optgroup"/>
                <xs:element ref="option"/>
            </xs:choice>
            <xs:attributeGroup ref="attrs"/>
            <xs:attribute name="name"/>
            <xs:attribute name="size" type="Number"/>
            <xs:attribute name="multiple">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="multiple"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="disabled">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="disabled"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="tabindex" type="tabindexNumber"/>
            <xs:attribute name="onfocus" type="Script"/>
            <xs:attribute name="onblur" type="Script"/>
            <xs:attribute name="onchange" type="Script"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="textarea">
        <xs:annotation>
            <xs:documentation>
                multi-line text field
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:attributeGroup ref="attrs"/>
            <xs:attributeGroup ref="focus"/>
            <xs:attribute name="name"/>
            <xs:attribute name="rows" type="Number" use="required"/>
            <xs:attribute name="cols" type="Number" use="required"/>
            <xs:attribute name="disabled">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="disabled"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="readonly">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="readonly"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="onselect" type="Script"/>
            <xs:attribute name="onchange" type="Script"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="label">
        <xs:annotation>
            <xs:documentation>
                Each label must not contain more than ONE field
                Label elements shouldn't be nested.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                    <xs:attribute name="for" type="xs:IDREF"/>
                    <xs:attribute name="accesskey" type="Character"/>
                    <xs:attribute name="onfocus" type="Script"/>
                    <xs:attribute name="onblur" type="Script"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="button">
        <xs:annotation>
            <xs:documentation>
                Content is "Flow" excluding a, form and form controls
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="button.content">
                    <xs:attributeGroup ref="attrs"/>
                    <xs:attributeGroup ref="focus"/>
                    <xs:attribute name="name"/>
                    <xs:attribute name="value"/>
                    <xs:attribute default="submit" name="type">
                        <xs:simpleType>
                            <xs:restriction base="xs:token">
                                <xs:enumeration value="button"/>
                                <xs:enumeration value="submit"/>
                                <xs:enumeration value="reset"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="disabled">
                        <xs:simpleType>
                            <xs:restriction base="xs:token">
                                <xs:enumeration value="disabled"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="ins">
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Flow">
                    <xs:attributeGroup ref="attrs"/>
                    <xs:attribute name="cite" type="URI"/>
                    <xs:attribute name="datetime" type="Datetime"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="del">
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Flow">
                    <xs:attributeGroup ref="attrs"/>
                    <xs:attribute name="cite" type="URI"/>
                    <xs:attribute name="datetime" type="Datetime"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="optgroup">
        <xs:annotation>
            <xs:documentation>
                option group
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="option"/>
            </xs:sequence>
            <xs:attributeGroup ref="attrs"/>
            <xs:attribute name="disabled">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="disabled"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="label" type="Text" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="option">
        <xs:annotation>
            <xs:documentation>
                selectable choice
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:attributeGroup ref="attrs"/>
            <xs:attribute name="disabled">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="disabled"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="label" type="Text"/>
            <xs:attribute name="value"/>
            <xs:attribute name="item-id" type="xs:string"/>
            <xs:attribute fixed="" name="selected" type="xs:string"/>
            <xs:attribute name="icon" type="URI"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="h1">
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="h2">
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="h3">
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="h4">
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="h5">
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="h6">
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="ul">
        <xs:annotation>
            <xs:documentation>
                Unordered list
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="li"/>
            </xs:sequence>
            <xs:attributeGroup ref="attrs"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="ol">
        <xs:annotation>
            <xs:documentation>
                Ordered (numbered) list
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="li"/>
            </xs:sequence>
            <xs:attributeGroup ref="attrs"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="li">
        <xs:annotation>
            <xs:documentation>
                list item
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Flow">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="dl">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:element ref="dt"/>
                <xs:element ref="dd"/>
            </xs:choice>
            <xs:attributeGroup ref="attrs"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="dt">
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="br">
        <xs:annotation>
            <xs:documentation>
                forced line break
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attributeGroup ref="coreattrs"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="span">
        <xs:annotation>
            <xs:documentation>
                generic language/style container
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="bdo">
        <xs:annotation>
            <xs:documentation>
                I18N BiDi over-ride
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="coreattrs"/>
                    <xs:attributeGroup ref="events"/>
                    <xs:attribute name="lang" type="LanguageCode"/>
                    <xs:attribute name="dir" use="required">
                        <xs:simpleType>
                            <xs:restriction base="xs:token">
                                <xs:enumeration value="ltr"/>
                                <xs:enumeration value="rtl"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="map">
        <xs:complexType>
            <xs:choice>
                <xs:choice maxOccurs="unbounded">
                    <xs:group ref="block"/>
                    <xs:element ref="form"/>
                    <xs:group ref="misc"/>
                </xs:choice>
                <xs:element maxOccurs="unbounded" ref="area"/>
            </xs:choice>
            <xs:attributeGroup ref="i18n"/>
            <xs:attributeGroup ref="events"/>
            <xs:attribute name="id" type="xs:ID" use="required"/>
            <xs:attribute name="class"/>
            <xs:attribute name="style" type="StyleSheet"/>
            <xs:attribute name="title" type="Text"/>
            <xs:attribute name="name" type="xs:NMTOKEN"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="script">
        <xs:annotation>
            <xs:documentation>
                script statements, which may include CDATA sections
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:attribute name="id" type="xs:ID"/>
            <xs:attribute name="charset" type="Charset"/>
            <xs:attribute name="type" type="ContentType" use="required"/>
            <xs:attribute name="src" type="URI"/>
            <xs:attribute name="defer">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="defer"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="div">
        <xs:annotation>
            <xs:documentation>
                generic language/style container      
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Flow">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="table">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="caption"/>
                <xs:choice>
                    <xs:element maxOccurs="unbounded" minOccurs="0" ref="col"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" ref="colgroup"/>
                </xs:choice>
                <xs:element minOccurs="0" ref="thead"/>
                <xs:element minOccurs="0" ref="tfoot"/>
                <xs:choice>
                    <xs:element maxOccurs="unbounded" ref="tbody"/>
                    <xs:element maxOccurs="unbounded" ref="tr"/>
                </xs:choice>
            </xs:sequence>
            <xs:attributeGroup ref="attrs"/>
            <xs:attribute name="summary" type="Text"/>
            <xs:attribute name="width" type="Length"/>
            <xs:attribute name="border" type="Pixels"/>
            <xs:attribute name="frame" type="TFrame"/>
            <xs:attribute name="rules" type="TRules"/>
            <xs:attribute name="cellspacing" type="Length"/>
            <xs:attribute name="cellpadding" type="Length"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="form">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="form.content">
                    <xs:attributeGroup ref="attrs"/>
                    <xs:attribute name="action" type="URI" use="required"/>
                    <xs:attribute default="get" name="method">
                        <xs:simpleType>
                            <xs:restriction base="xs:token">
                                <xs:enumeration value="get"/>
                                <xs:enumeration value="post"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute default="application/x-www-form-urlencoded" name="enctype" type="ContentType"/>
                    <xs:attribute name="onsubmit" type="Script"/>
                    <xs:attribute name="onreset" type="Script"/>
                    <xs:attribute name="accept" type="ContentTypes"/>
                    <xs:attribute name="accept-charset" type="Charsets"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="pre">
        <xs:annotation>
            <xs:documentation>
                content is "Inline" excluding "img|object|big|small|sub|sup"
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="pre.content">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="hr">
        <xs:complexType>
            <xs:attributeGroup ref="attrs"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="blockquote">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Block">
                    <xs:attributeGroup ref="attrs"/>
                    <xs:attribute name="cite" type="URI"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="address">
        <xs:annotation>
            <xs:documentation>
                information on author
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="noscript">
        <xs:annotation>
            <xs:documentation>
                alternate content container for non script-based rendering
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Block">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="fieldset">
        <xs:annotation>
            <xs:documentation>
                The fieldset element is used to group form fields.
                Only one legend element should occur in the content
                and if present should only be preceded by whitespace.

                NOTE: this content model is different from the XHTML 1.0 DTD,
                closer to the intended content model in HTML4 DTD
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element ref="legend"/>
                <xs:choice maxOccurs="unbounded" minOccurs="0">
                    <xs:group ref="block"/>
                    <xs:element ref="form"/>
                    <xs:group ref="inline"/>
                    <xs:group ref="misc"/>
                </xs:choice>
            </xs:sequence>
            <xs:attributeGroup ref="attrs"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="dd">
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Flow">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="area">
        <xs:complexType>
            <xs:attributeGroup ref="attrs"/>
            <xs:attributeGroup ref="focus"/>
            <xs:attribute default="rect" name="shape" type="Shape"/>
            <xs:attribute name="coords" type="Coords"/>
            <xs:attribute name="href" type="URI"/>
            <xs:attribute name="nohref">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="nohref"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="alt" type="Text" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="caption">
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="col">
        <xs:annotation>
            <xs:documentation>
                col elements define the alignment properties for cells in
                one or more columns.

                The width attribute specifies the width of the columns, e.g.

                width=64        width in screen pixels
                width=0.5*      relative width of 0.5

                The span attribute causes the attributes of one
                col element to apply to more than one column.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attributeGroup ref="attrs"/>
            <xs:attribute default="1" name="span" type="Number"/>
            <xs:attribute name="width" type="MultiLength"/>
            <xs:attributeGroup ref="cellhalign"/>
            <xs:attributeGroup ref="cellvalign"/>
            <xs:attribute name="property-id" type="xs:string"/>
            <xs:attribute fixed="" name="center" type="xs:string"/>
            <xs:attribute fixed="" name="right" type="xs:string"/>
            <xs:attribute default="1" name="expand" type="xs:string"/>
            <xs:attribute name="collapsible" type="xs:boolean"/>
            <xs:attribute name="collapsed" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="colgroup">
        <xs:annotation>
            <xs:documentation>
                colgroup groups a set of col elements. It allows you to group
                several semantically related columns together.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="col"/>
            </xs:sequence>
            <xs:attributeGroup ref="attrs"/>
            <xs:attribute default="1" name="span" type="Number"/>
            <xs:attribute name="width" type="MultiLength"/>
            <xs:attributeGroup ref="cellhalign"/>
            <xs:attributeGroup ref="cellvalign"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="thead">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="tr"/>
            </xs:sequence>
            <xs:attributeGroup ref="attrs"/>
            <xs:attributeGroup ref="cellhalign"/>
            <xs:attributeGroup ref="cellvalign"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="tfoot">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="tr"/>
            </xs:sequence>
            <xs:attributeGroup ref="attrs"/>
            <xs:attributeGroup ref="cellhalign"/>
            <xs:attributeGroup ref="cellvalign"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="tbody">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="tr"/>
            </xs:sequence>
            <xs:attributeGroup ref="attrs"/>
            <xs:attributeGroup ref="cellhalign"/>
            <xs:attributeGroup ref="cellvalign"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="tr">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:element ref="th"/>
                <xs:element ref="td"/>
            </xs:choice>
            <xs:attributeGroup ref="attrs"/>
            <xs:attributeGroup ref="cellhalign"/>
            <xs:attributeGroup ref="cellvalign"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="legend">
        <xs:annotation>
            <xs:documentation>
                fieldset label
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Inline">
                    <xs:attributeGroup ref="attrs"/>
                    <xs:attribute name="accesskey" type="Character"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="th">
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Flow">
                    <xs:attributeGroup ref="attrs"/>
                    <xs:attribute name="abbr" type="Text"/>
                    <xs:attribute name="axis"/>
                    <xs:attribute name="headers" type="xs:IDREFS"/>
                    <xs:attribute name="scope" type="Scope"/>
                    <xs:attribute default="1" name="rowspan" type="Number"/>
                    <xs:attribute default="1" name="colspan" type="Number"/>
                    <xs:attributeGroup ref="cellhalign"/>
                    <xs:attributeGroup ref="cellvalign"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="td">
        <xs:complexType mixed="true">
            <xs:complexContent>
                <xs:extension base="Flow">
                    <xs:attributeGroup ref="attrs"/>
                    <xs:attribute name="abbr" type="Text"/>
                    <xs:attribute name="axis"/>
                    <xs:attribute name="headers" type="xs:IDREFS"/>
                    <xs:attribute name="scope" type="Scope"/>
                    <xs:attribute default="1" name="rowspan" type="Number"/>
                    <xs:attribute default="1" name="colspan" type="Number"/>
                    <xs:attributeGroup ref="cellhalign"/>
                    <xs:attributeGroup ref="cellvalign"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="img">
        <xs:complexType>
            <xs:attributeGroup ref="attrs"/>
            <xs:attribute name="src" type="URI" use="required"/>
            <xs:attribute name="alt" type="Text" use="required"/>
            <xs:attribute name="longdesc" type="URI"/>
            <xs:attribute name="height" type="Length"/>
            <xs:attribute name="width" type="Length"/>
            <xs:attribute name="usemap" type="URI">
                <xs:annotation>
                    <xs:documentation>
                        usemap points to a map element which may be in this document
                        or an external document, although the latter is not widely supported
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ismap">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="ismap"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="node">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="node"/>
            </xs:sequence>
            <xs:attribute name="text" type="Text"/>
            <xs:attribute name="icon" type="URI"/>
            <xs:attribute fixed="" name="selected" type="xs:string"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="tab">
        <xs:complexType>
            <xs:group ref="AllComponentsGroup"/>
            <xs:attribute name="visible" type="xs:boolean"/>
            <xs:attribute name="closable" type="xs:boolean"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="enabled" type="xs:boolean"/>
            <xs:attribute name="icon" type="URI"/>
            <xs:attribute name="icon-alt" type="xs:string"/>
            <xs:attribute name="description" type="xs:string"/>
            <xs:attribute name="style-name" type="xs:string"/>
            <xs:attribute name="id" type="xs:string"/>
            <xs:attribute name="selected" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="menu">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="menu"/>
            </xs:sequence>
            <xs:attribute fixed="" name="more" type="xs:string"/>
            <xs:attribute name="icon" type="URI"/>
            <xs:attribute name="visible" type="xs:boolean"/>
            <xs:attribute name="disabled" type="xs:boolean"/>
            <xs:attribute name="separator" type="xs:boolean"/>
            <xs:attribute name="checkable" type="xs:boolean"/>
            <xs:attribute name="checked" type="xs:boolean"/>
            <xs:attribute name="description" type="xs:boolean"/>
            <xs:attribute name="style-name" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:attributeGroup name="_parent">
        <xs:annotation>
            <xs:documentation>
                Attributes managing component settings inside parent layout.
                Must start with ":" in design file. Sadly it's invalid XML.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute default="1" name="_expand" type="xs:double">
            <xs:annotation>
                <xs:documentation>
                    Expand ratio on parent. Use in ":expand" form
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute fixed="" name="_right" type="xs:string"/>
        <xs:attribute fixed="" name="_center" type="xs:string"/>
        <xs:attribute fixed="" name="_middle" type="xs:string"/>
        <xs:attribute fixed="" name="_bottom" type="xs:string"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="com.vaadin.ui.Component">
        <xs:attributeGroup ref="_parent"/>
        <xs:attribute name="_id" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Local id
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="id" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Unique id for component that get's transferred to terminal for testing purposes.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="description" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Component's description.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="enabled" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>
                    Enables or disables the component.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="visible" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>
                    Visibility of the component.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="style-name" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    One or more user-defined style names of the component.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="primary-style-name" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Primary style name of the component.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="locale" type="xs:string"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="com.vaadin.server.Sizeable">
        <xs:attribute name="width" type="xs:string"/>
        <xs:attribute name="height" type="xs:string"/>
        <xs:attribute fixed="" name="size-full" type="xs:string"/>
        <xs:attribute fixed="" name="height-full" type="xs:string"/>
        <xs:attribute fixed="" name="width-full" type="xs:string"/>
        <xs:attribute fixed="" name="size-auto" type="xs:string"/>
        <xs:attribute fixed="" name="height-auto" type="xs:string"/>
        <xs:attribute fixed="" name="width-auto" type="xs:string"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="com.vaadin.ui.AbstractComponent">
        <xs:attributeGroup ref="com.vaadin.server.Sizeable"/>
        <xs:attributeGroup ref="com.vaadin.ui.Component"/>
        <xs:attribute name="caption-as-html" type="xs:boolean"/>
        <xs:attribute name="data" type="xs:string"/>
        <xs:attribute name="immediate" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>
                    The component's immediate mode.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="error" type="xs:string"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="com.vaadin.ui.Layout..SpacingHandler">
        <xs:attribute name="spacing" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>
                    Spacing between child components within this layout.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>
    <xs:attributeGroup name="com.vaadin.ui.Layout..MarginHandler">
        <xs:attribute name="margin" type="xs:boolean"/>
        <xs:attribute name="margin-top" type="xs:boolean"/>
        <xs:attribute name="margin-right" type="xs:boolean"/>
        <xs:attribute name="margin-bottom" type="xs:boolean"/>
        <xs:attribute name="margin-left" type="xs:boolean"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="com.vaadin.ui.AbstractField">
        <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
        <xs:attribute name="required" type="xs:boolean"/>
        <xs:attribute name="buffered" type="xs:boolean"/>
        <xs:attribute name="invalid-allowed" type="xs:boolean"/>
        <xs:attribute name="invalid-committed" type="xs:boolean"/>
        <xs:attribute name="conversion-error" type="xs:string"/>
        <xs:attribute name="converted-value" type="xs:string"/>
        <xs:attribute name="value" type="xs:string"/>
        <xs:attribute name="required-error" type="xs:string"/>
        <xs:attribute name="validation-visible" type="xs:boolean"/>
        <xs:attribute name="tabindex" type="xs:integer"/>
    </xs:attributeGroup>
    <xs:group name="AllComponentsGroup">
        <xs:choice>
            <xs:element ref="v-absolute-layout"/>
            <xs:element ref="v-accordion"/>
            <xs:element ref="v-audio"/>
            <xs:element ref="v-browser-frame"/>
            <xs:element ref="v-button"/>
            <xs:element ref="v-calendar"/>
            <xs:element ref="v-check-box"/>
            <xs:element ref="v-color-picker"/>
            <xs:element ref="v-color-picker-area"/>
            <xs:element ref="v-combo-box"/>
            <xs:element ref="v-css-layout"/>
            <xs:element ref="v-custom-component"/>
            <xs:element ref="v-custom-layout"/>
            <xs:element ref="v-date-field"/>
            <xs:element ref="v-drag-and-drop-wrapper"/>
            <xs:element ref="v-embedded"/>
            <xs:element ref="v-flash"/>
            <xs:element ref="v-form"/>
            <xs:element ref="v-form-layout"/>
            <xs:element ref="v-grid"/>
            <xs:element ref="v-grid-layout"/>
            <xs:element ref="v-horizontal-layout"/>
            <xs:element ref="v-horizontal-split-panel"/>
            <xs:element ref="v-image"/>
            <xs:element ref="v-inline-date-field"/>
            <xs:element ref="v-label"/>
            <xs:element ref="v-link"/>
            <xs:element ref="v-list-select"/>
            <xs:element ref="v-login-form"/>
            <xs:element ref="v-menu-bar"/>
            <xs:element ref="v-native-button"/>
            <xs:element ref="v-native-select"/>
            <xs:element ref="v-option-group"/>
            <xs:element ref="v-panel"/>
            <xs:element ref="v-password-field"/>
            <xs:element ref="v-popup-date-field"/>
            <xs:element ref="v-popup-view"/>
            <xs:element ref="v-progress-bar"/>
            <xs:element ref="v-progress-indicator"/>
            <xs:element ref="v-rich-text-area"/>
            <xs:element ref="v-select"/>
            <xs:element ref="v-slider"/>
            <xs:element ref="v-tab-sheet"/>
            <xs:element ref="v-table"/>
            <xs:element ref="v-text-area"/>
            <xs:element ref="v-text-field"/>
            <xs:element ref="v-tree"/>
            <xs:element ref="v-tree-table"/>
            <xs:element ref="v-twin-col-select"/>
            <xs:element ref="v-upload"/>
            <xs:element ref="v-vertical-layout"/>
            <xs:element ref="v-vertical-split-panel"/>
            <xs:element ref="v-video"/>
            <xs:element ref="v-window"/>
            <xs:element ref="demo-custom-component"/>
            <xs:element ref="demo-root-design"/>
        </xs:choice>
    </xs:group>
    <xs:element name="v-absolute-layout">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="AllComponentsGroup"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-accordion">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="AllComponentsGroup"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="tab-captions-as-html" type="xs:boolean"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="tabs-visible" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-audio">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="html-content-allowed" type="xs:boolean"/>
            <xs:attribute name="show-controls" type="xs:boolean"/>
            <xs:attribute name="muted" type="xs:boolean"/>
            <xs:attribute name="autoplay" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-browser-frame">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="alt" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-button">
        <xs:complexType mixed="true">
            <xs:group ref="html-tags"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="disable-on-click" type="xs:boolean"/>
            <xs:attribute name="icon-alt" type="xs:string"/>
            <xs:attribute name="plain-text" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-calendar">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="last-visible-day-of-week" type="xs:int"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="first-visible-hour-of-day" type="xs:int"/>
            <xs:attribute name="time-format" type="xs:string"/>
            <xs:attribute name="weekly-caption-format" type="xs:string"/>
            <xs:attribute name="first-visible-day-of-week" type="xs:int"/>
            <xs:attribute name="last-visible-hour-of-day" type="xs:int"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="event-caption-as-html" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-check-box">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="checked" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-color-picker">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="color" type="xs:string"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="html-content-allowed" type="xs:boolean"/>
            <xs:attribute name="hsv-visibility" type="xs:boolean"/>
            <xs:attribute name="default-caption-enabled" type="xs:boolean"/>
            <xs:attribute name="popup-style" type="xs:string"/>
            <xs:attribute name="textfield-visibility" type="xs:boolean"/>
            <xs:attribute name="history-visibility" type="xs:boolean"/>
            <xs:attribute name="rgb-visibility" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="swatches-visibility" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-color-picker-area">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="color" type="xs:string"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="html-content-allowed" type="xs:boolean"/>
            <xs:attribute name="hsv-visibility" type="xs:boolean"/>
            <xs:attribute name="default-caption-enabled" type="xs:boolean"/>
            <xs:attribute name="popup-style" type="xs:string"/>
            <xs:attribute name="textfield-visibility" type="xs:boolean"/>
            <xs:attribute name="history-visibility" type="xs:boolean"/>
            <xs:attribute name="rgb-visibility" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="swatches-visibility" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-combo-box">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="option"/>
            </xs:sequence>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="null-selection-item-id" type="xs:string"/>
            <xs:attribute name="item-caption-property-id" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="text-input-allowed" type="xs:boolean"/>
            <xs:attribute name="input-prompt" type="xs:string"/>
            <xs:attribute name="scroll-to-selected-item" type="xs:boolean"/>
            <xs:attribute name="popup-width" type="xs:string"/>
            <xs:attribute name="multi-select" type="xs:boolean"/>
            <xs:attribute name="page-length" type="xs:int"/>
            <xs:attribute name="new-items-allowed" type="xs:boolean"/>
            <xs:attribute name="null-selection-allowed" type="xs:boolean"/>
            <xs:attribute name="item-icon-property-id" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="item-caption-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="ID"/>
                        <xs:enumeration value="ID_TOSTRING"/>
                        <xs:enumeration value="ITEM"/>
                        <xs:enumeration value="INDEX"/>
                        <xs:enumeration value="EXPLICIT_DEFAULTS_ID"/>
                        <xs:enumeration value="EXPLICIT"/>
                        <xs:enumeration value="ICON_ONLY"/>
                        <xs:enumeration value="PROPERTY"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="filtering-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="OFF"/>
                        <xs:enumeration value="STARTSWITH"/>
                        <xs:enumeration value="CONTAINS"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-css-layout">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="AllComponentsGroup"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-custom-component">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-custom-layout">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="AllComponentsGroup"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="template-contents" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="template-name" type="xs:string"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-date-field">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="resolution">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="SECOND"/>
                        <xs:enumeration value="MINUTE"/>
                        <xs:enumeration value="HOUR"/>
                        <xs:enumeration value="DAY"/>
                        <xs:enumeration value="MONTH"/>
                        <xs:enumeration value="YEAR"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="lenient" type="xs:boolean"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="show-iso-week-numbers" type="xs:boolean"/>
            <xs:attribute name="parse-error-message" type="xs:string"/>
            <xs:attribute name="date-out-of-range-message" type="xs:string"/>
            <xs:attribute name="date-format" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-drag-and-drop-wrapper">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="drag-start-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="NONE"/>
                        <xs:enumeration value="COMPONENT"/>
                        <xs:enumeration value="WRAPPER"/>
                        <xs:enumeration value="HTML5"/>
                        <xs:enumeration value="COMPONENT_OTHER"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-embedded">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="standby" type="xs:string"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="type" type="xs:int"/>
            <xs:attribute name="class-id" type="xs:string"/>
            <xs:attribute name="mime-type" type="xs:string"/>
            <xs:attribute name="archive" type="xs:string"/>
            <xs:attribute name="alternate-text" type="xs:string"/>
            <xs:attribute name="codetype" type="xs:string"/>
            <xs:attribute name="codebase" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-flash">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="standby" type="xs:string"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="alt" type="xs:string"/>
            <xs:attribute name="archive" type="xs:string"/>
            <xs:attribute name="codetype" type="xs:string"/>
            <xs:attribute name="codebase" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-form">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="validation-visible-on-commit" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-form-layout">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="AllComponentsGroup"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attributeGroup ref="com.vaadin.ui.Layout..MarginHandler"/>
            <xs:attributeGroup ref="com.vaadin.ui.Layout..SpacingHandler"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-grid">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="table"/>
            </xs:sequence>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="editor-save-caption" type="xs:string"/>
            <xs:attribute name="editor-buffered" type="xs:boolean"/>
            <xs:attribute name="editable" type="xs:boolean"/>
            <xs:attribute name="rows" type="xs:double"/>
            <xs:attribute name="column-reordering-allowed" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="editor-cancel-caption" type="xs:string"/>
            <xs:attribute name="frozen-columns" type="xs:int"/>
            <xs:attribute name="selection-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="SINGLE"/>
                        <xs:enumeration value="MULTI"/>
                        <xs:enumeration value="NONE"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-grid-layout">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="AllComponentsGroup"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attributeGroup ref="com.vaadin.ui.Layout..MarginHandler"/>
            <xs:attributeGroup ref="com.vaadin.ui.Layout..SpacingHandler"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="hide-empty-rows-and-columns" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-horizontal-layout">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="AllComponentsGroup"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attributeGroup ref="com.vaadin.ui.Layout..MarginHandler"/>
            <xs:attributeGroup ref="com.vaadin.ui.Layout..SpacingHandler"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-horizontal-split-panel">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="AllComponentsGroup"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="locked" type="xs:boolean"/>
            <xs:attribute name="split-position" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="reversed" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-image">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="alt" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-inline-date-field">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="resolution">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="SECOND"/>
                        <xs:enumeration value="MINUTE"/>
                        <xs:enumeration value="HOUR"/>
                        <xs:enumeration value="DAY"/>
                        <xs:enumeration value="MONTH"/>
                        <xs:enumeration value="YEAR"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="lenient" type="xs:boolean"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="show-iso-week-numbers" type="xs:boolean"/>
            <xs:attribute name="parse-error-message" type="xs:string"/>
            <xs:attribute name="date-out-of-range-message" type="xs:string"/>
            <xs:attribute name="date-format" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-label">
        <xs:complexType mixed="true">
            <xs:group ref="html-tags"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="plain-text" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-link">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="target-width" type="xs:int"/>
            <xs:attribute name="target-height" type="xs:int"/>
            <xs:attribute name="target" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="target-border">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="NONE"/>
                        <xs:enumeration value="MINIMAL"/>
                        <xs:enumeration value="DEFAULT"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-list-select">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="option"/>
            </xs:sequence>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="columns" type="xs:int"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="null-selection-item-id" type="xs:string"/>
            <xs:attribute name="item-caption-property-id" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="multi-select" type="xs:boolean"/>
            <xs:attribute name="rows" type="xs:int"/>
            <xs:attribute name="new-items-allowed" type="xs:boolean"/>
            <xs:attribute name="null-selection-allowed" type="xs:boolean"/>
            <xs:attribute name="item-icon-property-id" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="item-caption-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="ID"/>
                        <xs:enumeration value="ID_TOSTRING"/>
                        <xs:enumeration value="ITEM"/>
                        <xs:enumeration value="INDEX"/>
                        <xs:enumeration value="EXPLICIT_DEFAULTS_ID"/>
                        <xs:enumeration value="EXPLICIT"/>
                        <xs:enumeration value="ICON_ONLY"/>
                        <xs:enumeration value="PROPERTY"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-login-form">
        <xs:complexType>
            <xs:group minOccurs="0" ref="AllComponentsGroup"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="password-caption" type="xs:string"/>
            <xs:attribute name="login-button-caption" type="xs:string"/>
            <xs:attribute name="username-caption" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-menu-bar">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="menu"/>
            </xs:sequence>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="auto-open" type="xs:boolean"/>
            <xs:attribute name="plain-text" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-native-button">
        <xs:complexType mixed="true">
            <xs:group ref="html-tags"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="disable-on-click" type="xs:boolean"/>
            <xs:attribute name="icon-alt" type="xs:string"/>
            <xs:attribute name="plain-text" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-native-select">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="option"/>
            </xs:sequence>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="columns" type="xs:int"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="null-selection-item-id" type="xs:string"/>
            <xs:attribute name="item-caption-property-id" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="multi-select" type="xs:boolean"/>
            <xs:attribute name="new-items-allowed" type="xs:boolean"/>
            <xs:attribute name="null-selection-allowed" type="xs:boolean"/>
            <xs:attribute name="item-icon-property-id" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="item-caption-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="ID"/>
                        <xs:enumeration value="ID_TOSTRING"/>
                        <xs:enumeration value="ITEM"/>
                        <xs:enumeration value="INDEX"/>
                        <xs:enumeration value="EXPLICIT_DEFAULTS_ID"/>
                        <xs:enumeration value="EXPLICIT"/>
                        <xs:enumeration value="ICON_ONLY"/>
                        <xs:enumeration value="PROPERTY"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-option-group">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="option"/>
            </xs:sequence>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="null-selection-item-id" type="xs:string"/>
            <xs:attribute name="html-content-allowed" type="xs:boolean"/>
            <xs:attribute name="item-caption-property-id" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="multi-select" type="xs:boolean"/>
            <xs:attribute name="new-items-allowed" type="xs:boolean"/>
            <xs:attribute name="null-selection-allowed" type="xs:boolean"/>
            <xs:attribute name="item-icon-property-id" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="item-caption-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="ID"/>
                        <xs:enumeration value="ID_TOSTRING"/>
                        <xs:enumeration value="ITEM"/>
                        <xs:enumeration value="INDEX"/>
                        <xs:enumeration value="EXPLICIT_DEFAULTS_ID"/>
                        <xs:enumeration value="EXPLICIT"/>
                        <xs:enumeration value="ICON_ONLY"/>
                        <xs:enumeration value="PROPERTY"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-panel">
        <xs:complexType>
            <xs:group minOccurs="0" ref="AllComponentsGroup"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="scroll-left" type="xs:int"/>
            <xs:attribute name="scroll-top" type="xs:int"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-password-field">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="columns" type="xs:int"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="text-change-timeout" type="xs:int"/>
            <xs:attribute name="text-change-event-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="EAGER"/>
                        <xs:enumeration value="TIMEOUT"/>
                        <xs:enumeration value="LAZY"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="input-prompt" type="xs:string"/>
            <xs:attribute name="maxlength" type="xs:int"/>
            <xs:attribute name="null-representation" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="null-setting-allowed" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-popup-date-field">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="text-field-enabled" type="xs:boolean"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="resolution">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="SECOND"/>
                        <xs:enumeration value="MINUTE"/>
                        <xs:enumeration value="HOUR"/>
                        <xs:enumeration value="DAY"/>
                        <xs:enumeration value="MONTH"/>
                        <xs:enumeration value="YEAR"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="lenient" type="xs:boolean"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="show-iso-week-numbers" type="xs:boolean"/>
            <xs:attribute name="input-prompt" type="xs:string"/>
            <xs:attribute name="date-out-of-range-message" type="xs:string"/>
            <xs:attribute name="parse-error-message" type="xs:string"/>
            <xs:attribute name="date-format" type="xs:string"/>
            <xs:attribute name="assistive-text" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-popup-view">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="hide-on-mouse-out" type="xs:boolean"/>
            <xs:attribute name="popup-visible" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-progress-bar">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="indeterminate" type="xs:boolean"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-progress-indicator">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="indeterminate" type="xs:boolean"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="polling-interval" type="xs:int"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-rich-text-area">
        <xs:complexType mixed="true">
            <xs:group ref="html-tags"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="null-representation" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="null-setting-allowed" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-select">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="option"/>
            </xs:sequence>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="null-selection-item-id" type="xs:string"/>
            <xs:attribute name="item-caption-property-id" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="text-input-allowed" type="xs:boolean"/>
            <xs:attribute name="input-prompt" type="xs:string"/>
            <xs:attribute name="scroll-to-selected-item" type="xs:boolean"/>
            <xs:attribute name="popup-width" type="xs:string"/>
            <xs:attribute name="multi-select" type="xs:boolean"/>
            <xs:attribute name="page-length" type="xs:int"/>
            <xs:attribute name="new-items-allowed" type="xs:boolean"/>
            <xs:attribute name="null-selection-allowed" type="xs:boolean"/>
            <xs:attribute name="item-icon-property-id" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="item-caption-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="ID"/>
                        <xs:enumeration value="ID_TOSTRING"/>
                        <xs:enumeration value="ITEM"/>
                        <xs:enumeration value="INDEX"/>
                        <xs:enumeration value="EXPLICIT_DEFAULTS_ID"/>
                        <xs:enumeration value="EXPLICIT"/>
                        <xs:enumeration value="ICON_ONLY"/>
                        <xs:enumeration value="PROPERTY"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="filtering-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="OFF"/>
                        <xs:enumeration value="STARTSWITH"/>
                        <xs:enumeration value="CONTAINS"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-slider">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="vertical" type="xs:string"/>
            <xs:attribute name="resolution" type="xs:int"/>
            <xs:attribute name="min" type="xs:double"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="max" type="xs:double"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-tab-sheet">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="tab"/>
            </xs:sequence>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="tab-captions-as-html" type="xs:boolean"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="tabs-visible" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-table">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="table"/>
            </xs:sequence>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="sort-container-property-id" type="xs:string"/>
            <xs:attribute name="child-measurement-hint">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="MEASURE_ALWAYS"/>
                        <xs:enumeration value="MEASURE_IF_NEEDED"/>
                        <xs:enumeration value="MEASURE_NEVER"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="selectable" type="xs:boolean"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="null-selection-item-id" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="row-header-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="HIDDEN"/>
                        <xs:enumeration value="ID"/>
                        <xs:enumeration value="ITEM"/>
                        <xs:enumeration value="INDEX"/>
                        <xs:enumeration value="EXPLICIT_DEFAULTS_ID"/>
                        <xs:enumeration value="EXPLICIT"/>
                        <xs:enumeration value="ICON_ONLY"/>
                        <xs:enumeration value="PROPERTY"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="sort-ascending" type="xs:boolean"/>
            <xs:attribute name="page-length" type="xs:int"/>
            <xs:attribute name="collapse-menu-content">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="ALL_COLUMNS"/>
                        <xs:enumeration value="COLLAPSIBLE_COLUMNS"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="null-selection-allowed" type="xs:boolean"/>
            <xs:attribute name="cache-rate" type="xs:double"/>
            <xs:attribute name="drag-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="NONE"/>
                        <xs:enumeration value="ROW"/>
                        <xs:enumeration value="MULTIROW"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="column-reordering-allowed" type="xs:boolean"/>
            <xs:attribute name="item-icon-property-id" type="xs:string"/>
            <xs:attribute name="column-header-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="HIDDEN"/>
                        <xs:enumeration value="ID"/>
                        <xs:enumeration value="EXPLICIT"/>
                        <xs:enumeration value="EXPLICIT_DEFAULTS_ID"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="item-caption-property-id" type="xs:string"/>
            <xs:attribute name="multi-select-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="DEFAULT"/>
                        <xs:enumeration value="SIMPLE"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="column-collapsing-allowed" type="xs:boolean"/>
            <xs:attribute name="editable" type="xs:boolean"/>
            <xs:attribute name="multi-select" type="xs:boolean"/>
            <xs:attribute name="sortable" type="xs:boolean"/>
            <xs:attribute name="new-items-allowed" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-text-area">
        <xs:complexType mixed="true">
            <xs:group ref="html-tags"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="columns" type="xs:int"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="text-change-timeout" type="xs:int"/>
            <xs:attribute name="wordwrap" type="xs:boolean"/>
            <xs:attribute name="text-change-event-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="EAGER"/>
                        <xs:enumeration value="TIMEOUT"/>
                        <xs:enumeration value="LAZY"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="input-prompt" type="xs:string"/>
            <xs:attribute name="maxlength" type="xs:int"/>
            <xs:attribute name="rows" type="xs:int"/>
            <xs:attribute name="null-representation" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="null-setting-allowed" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-text-field">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="columns" type="xs:int"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="text-change-timeout" type="xs:int"/>
            <xs:attribute name="text-change-event-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="EAGER"/>
                        <xs:enumeration value="TIMEOUT"/>
                        <xs:enumeration value="LAZY"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="input-prompt" type="xs:string"/>
            <xs:attribute name="maxlength" type="xs:int"/>
            <xs:attribute name="null-representation" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="null-setting-allowed" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-tree">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="node"/>
            </xs:sequence>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="selectable" type="xs:boolean"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="null-selection-item-id" type="xs:string"/>
            <xs:attribute name="html-content-allowed" type="xs:boolean"/>
            <xs:attribute name="item-caption-property-id" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="multi-select" type="xs:boolean"/>
            <xs:attribute name="new-items-allowed" type="xs:boolean"/>
            <xs:attribute name="null-selection-allowed" type="xs:boolean"/>
            <xs:attribute name="drag-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="NONE"/>
                        <xs:enumeration value="NODE"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="item-icon-property-id" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="item-caption-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="ID"/>
                        <xs:enumeration value="ID_TOSTRING"/>
                        <xs:enumeration value="ITEM"/>
                        <xs:enumeration value="INDEX"/>
                        <xs:enumeration value="EXPLICIT_DEFAULTS_ID"/>
                        <xs:enumeration value="EXPLICIT"/>
                        <xs:enumeration value="ICON_ONLY"/>
                        <xs:enumeration value="PROPERTY"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="multiselect-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="DEFAULT"/>
                        <xs:enumeration value="SIMPLE"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-tree-table">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="table"/>
            </xs:sequence>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="animations-enabled" type="xs:boolean"/>
            <xs:attribute name="sort-container-property-id" type="xs:string"/>
            <xs:attribute name="child-measurement-hint">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="MEASURE_ALWAYS"/>
                        <xs:enumeration value="MEASURE_IF_NEEDED"/>
                        <xs:enumeration value="MEASURE_NEVER"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="selectable" type="xs:boolean"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="null-selection-item-id" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="row-header-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="HIDDEN"/>
                        <xs:enumeration value="ID"/>
                        <xs:enumeration value="ITEM"/>
                        <xs:enumeration value="INDEX"/>
                        <xs:enumeration value="EXPLICIT_DEFAULTS_ID"/>
                        <xs:enumeration value="EXPLICIT"/>
                        <xs:enumeration value="ICON_ONLY"/>
                        <xs:enumeration value="PROPERTY"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="sort-ascending" type="xs:boolean"/>
            <xs:attribute name="page-length" type="xs:int"/>
            <xs:attribute name="collapse-menu-content">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="ALL_COLUMNS"/>
                        <xs:enumeration value="COLLAPSIBLE_COLUMNS"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="null-selection-allowed" type="xs:boolean"/>
            <xs:attribute name="cache-rate" type="xs:double"/>
            <xs:attribute name="drag-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="NONE"/>
                        <xs:enumeration value="ROW"/>
                        <xs:enumeration value="MULTIROW"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="column-reordering-allowed" type="xs:boolean"/>
            <xs:attribute name="item-icon-property-id" type="xs:string"/>
            <xs:attribute name="column-header-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="HIDDEN"/>
                        <xs:enumeration value="ID"/>
                        <xs:enumeration value="EXPLICIT"/>
                        <xs:enumeration value="EXPLICIT_DEFAULTS_ID"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="item-caption-property-id" type="xs:string"/>
            <xs:attribute name="multi-select-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="DEFAULT"/>
                        <xs:enumeration value="SIMPLE"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="column-collapsing-allowed" type="xs:boolean"/>
            <xs:attribute name="editable" type="xs:boolean"/>
            <xs:attribute name="multi-select" type="xs:boolean"/>
            <xs:attribute name="sortable" type="xs:boolean"/>
            <xs:attribute name="new-items-allowed" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-twin-col-select">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="option"/>
            </xs:sequence>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractField"/>
            <xs:attribute name="columns" type="xs:int"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="null-selection-item-id" type="xs:string"/>
            <xs:attribute name="right-column-caption" type="xs:string"/>
            <xs:attribute name="item-caption-property-id" type="xs:string"/>
            <xs:attribute name="readonly" type="xs:boolean"/>
            <xs:attribute name="multi-select" type="xs:boolean"/>
            <xs:attribute name="rows" type="xs:int"/>
            <xs:attribute name="new-items-allowed" type="xs:boolean"/>
            <xs:attribute name="left-column-caption" type="xs:string"/>
            <xs:attribute name="null-selection-allowed" type="xs:boolean"/>
            <xs:attribute name="item-icon-property-id" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="item-caption-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="ID"/>
                        <xs:enumeration value="ID_TOSTRING"/>
                        <xs:enumeration value="ITEM"/>
                        <xs:enumeration value="INDEX"/>
                        <xs:enumeration value="EXPLICIT_DEFAULTS_ID"/>
                        <xs:enumeration value="EXPLICIT"/>
                        <xs:enumeration value="ICON_ONLY"/>
                        <xs:enumeration value="PROPERTY"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-upload">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="button-caption" type="xs:string"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-vertical-layout">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="AllComponentsGroup"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attributeGroup ref="com.vaadin.ui.Layout..MarginHandler"/>
            <xs:attributeGroup ref="com.vaadin.ui.Layout..SpacingHandler"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-vertical-split-panel">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="AllComponentsGroup"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="locked" type="xs:boolean"/>
            <xs:attribute name="split-position" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="reversed" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-video">
        <xs:complexType>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="html-content-allowed" type="xs:boolean"/>
            <xs:attribute name="show-controls" type="xs:boolean"/>
            <xs:attribute name="muted" type="xs:boolean"/>
            <xs:attribute name="autoplay" type="xs:boolean"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="v-window">
        <xs:complexType>
            <xs:group minOccurs="0" ref="AllComponentsGroup"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attribute name="resize-lazy" type="xs:boolean"/>
            <xs:attribute name="assistive-postfix" type="xs:string"/>
            <xs:attribute name="closable" type="xs:boolean"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="draggable" type="xs:boolean"/>
            <xs:attribute name="modal" type="xs:boolean"/>
            <xs:attribute name="scroll-left" type="xs:int"/>
            <xs:attribute name="assistive-prefix" type="xs:string"/>
            <xs:attribute name="tab-stop-top-assistive-text" type="xs:string"/>
            <xs:attribute name="resizable" type="xs:boolean"/>
            <xs:attribute name="center" type="xs:string"/>
            <xs:attribute name="tab-stop-enabled" type="xs:boolean"/>
            <xs:attribute name="scroll-top" type="xs:int"/>
            <xs:attribute name="tab-stop-bottom-assistive-text" type="xs:string"/>
            <xs:attribute name="assistive-role">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="ALERTDIALOG"/>
                        <xs:enumeration value="DIALOG"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="responsive" type="xs:boolean"/>
            <xs:attribute name="position" type="xs:string"/>
            <xs:attribute name="window-mode">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="NORMAL"/>
                        <xs:enumeration value="MAXIMIZED"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="demo-custom-component">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="AllComponentsGroup"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attributeGroup ref="com.vaadin.ui.Layout..MarginHandler"/>
            <xs:attributeGroup ref="com.vaadin.ui.Layout..SpacingHandler"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="demo-root-design">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="AllComponentsGroup"/>
            <xs:attributeGroup ref="com.vaadin.ui.AbstractComponent"/>
            <xs:attributeGroup ref="com.vaadin.ui.Layout..MarginHandler"/>
            <xs:attributeGroup ref="com.vaadin.ui.Layout..SpacingHandler"/>
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="responsive" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
</xs:schema>
